To install git on your linux:
sudo apt-get install git -y

To check the version of the git:
git --version

To get help with git:
git help config
git config --help

To add user name to your git: 
git config --global user.name "your_user_name"

To add email id with git:
git config --global user.email "your_email"

To print all the configured attributes:
git config --list

Name of the file containing these configurations:
.gitconfig  
You can open this file with any editor

This file is present in the home directory

To initialize the folder to git: (first go inside the folder you want to initialize git in)
git init

WORKING WITH REPOSITORY:-

To clone a repository on your local machine:
git clone (url of the repository from github page without using ())

To get the status of your git: (it tells you about the new files that are added or need to be added to your repository)
git status

To add your file to git:
git add filename

To commit your file with comments:
git commit -m "Your comment, use -m to write comment followed by the comment in string" filename

To directly stage your modified file and commit it: NOTE:- untracked files wont be staged and committed only for tracked files that are staged or yet to be staged
git commit -a -m "comment"

Now to transfer the files to your git repository:
git push -u origin master

It will ask for user name and password for the account that is linked

To get the last commited status of the file:
git checkout filename
git checkout -f     	to checkout all files at once

To add all the files to git at once: 
git add --a

To compare the changes in the files from that of in the staging area:
git diff

Compares the files of the current staged area from the last commit:
git diff --staged

To know all the commits that have been made till now:
git log

To know all the commits with their differences: NOTE:- hit q to exit log preview
git log -p

To know last 3 commits with their differences: NOTE:- any number can be checked
git log -p -3

To know all the commits in statistical manner:
git log --stat

To know all the commits in one line description:
git log --pretty=oneline

To know all the commits in short decription:
git log --pretty=short

To know all the commits in short description with committer name:
git log --pretty=full

To know logs with time filter:
git log 2.days
git log 2.weeks
git log 2.months
git log 2.years

To know other git log commands google : git scm usefull options for git log format

To know according to a format: 
git log --pretty=format: "%h -- %an"

To ammend a change and/or a comment into last commit:
git commit --amend
it will open the vim editor, write your comment and exit it. make sure you have added your modified file to staging area before commiting this way.

To restore a file contents that has been modified to the last commited file status:
git checkout -- file_name

To checkout multiple files at a time:
git checkout -f

To connect your git to a github repository:

Step 1 : Create a gthub repository on the site.
Give it a name,description and make it public (public allows easy pull and push)

Step 2 : Copy the repository name. It will be like - git@github.com:ownername/repositoryname.git
NOTE : ownername and repository, copy it  carefully.

Step 3 : Go to your git repository on your system and type the command in your git bash
git remote add origin git@github.com:ownername/repositoryname.git
NOTE : origin is the name of the online hosted github repository

You have succesfully connected your git repository to the online hosted github repository.

To Check for the remote repositories:
git remote

To check for the remote repositories in detail:
git remote -v

NOTE : you will not be able to push or pull anything right now as you are not a accepted user yet. For that you need to get permission from github.
FOR THAT, 
1) Go to github settings.
2) Go to SSH and GPG keys.
3) Create a new SSH key. Give it a title and a SSH key.
NOW, To generate a SSH key google search ssh keys github or follow the steps below.
1) open git bash and run this command
$ ssh-keygen -t rsa -b 4096 -c "your_email@example.com"
and press Enter Enter to skip the passphrase dialogs.
Your key will be generated.
2) Adding this key to ssh-agent
run this command to make sure your ssh agent is working
$ eval $(ssh-agent -s)
Now add the key by this command
$ ssh-add ~/.ssh/id_rsa
3) Adding key to github
Run the command
$ tail ~/.ssh/id_rsa.pub
it will show you your ssh key
Take the key, Copy it and paste it where the ssh key was asked(go above on step 3 Create a new SSH key.)

Now you can Push or pull your files.

To push your commited files or folders or both:
git push - origin master

To create alias for commands:
git config --global alias.[your alias] [command]
For Eg:- to create an alias for unstaging a file type
git config --global alias.unstage 'restore --staged --'

To create a new branch from the current branch:
git checkout -b branchname

To switch to a different branch:
git checkout branchname

To merge a branch to the current branch:
git merge branchname
